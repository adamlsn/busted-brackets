{"version":3,"sources":["components/Footer/index.js","utils/auth.js","components/Header/index.js","pages/Home.js","pages/About.js","pages/Bracket.js","utils/mutations.js","pages/Login.js","utils/queries.js","pages/Profile.js","pages/Signup.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Header","to","Auth","loggedIn","href","onClick","event","preventDefault","logout","Home","style","textAlign","display","martinTop","title","About","props","text","width","margin","fontSize","fakeDbStuff","name","roundsWithDBData","seeds","i","length","roundData","id","date","toDateString","teams","push","console","log","rounds","Generator","useState","numberOfTeams","setNumberOfTeams","makeRounds","numberOfRounds","Math","cbrt","round","numberOfTeamsInRound","pow","j","seed","onChange","e","isNaN","target","value","parseInt","LOGIN_USER","gql","CREATE_USER","Login","email","password","formState","setFormState","useMutation","login","error","handleChange","handleFormSubmit","a","variables","data","onSubmit","placeholder","type","QUERY_USER","QUERY_ME","Profile","userParam","useParams","username","useQuery","loading","me","users","getProfile","Signup","createUser","client","ApolloClient","request","operation","setContext","headers","authorization","uri","App","ApolloProvider","exact","path","component","Bracket","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ef889b58.chunk.js","sourcesContent":["import React from 'react';\n\nconst  Footer = () => {\n    return (\n        <footer className=\"w-100 mt-auto bg-secondary p-4\">\n            <div className=\"container\">by Adam,Devon,Kaan,Luca,Mitchell</div>\n        </footer>\n    );\n}\nexport default Footer;","import decode from 'jwt-decode';\n\nclass AuhtService {\n    // getting token and getting the profile page\n    getProfile(){\n        return decode(this.getToken());\n    }\n\n    // checking loggedIn with token \n    loggedIn(){\n        const token = this.getToken();\n        return !!token && !this.isTokenExpired(token);\n    }\n\n    // check the created token ist expired or not\n    isTokenExpired(token){\n        try {\n            const decoded = decode(token);\n            if(decoded.exp < Date.now()/1000){\n                return true;\n            } else {\n                return false;\n            }\n        } catch (err){\n            return false;\n        }\n    }\n\n    //get saved token\n    getToken(){\n        return localStorage.getItem('id_token');\n    }\n    // set token for login in\n    login(idToken){\n        localStorage.setItem('id_token',idToken);\n\n        window.location.assign('/');\n    }\n    // remove save token when user logs out\n    logout(){\n        localStorage.removeItem('id_token');\n        window.location.assign('/');\n    }\n}\n\nexport default new AuhtService();","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Auth from '../../utils/auth';\n\n\nconst Header = () => {\n    const logout = event => {\n        event.preventDefault();\n        Auth.logout();\n    }\n    return (\n        <header className=\"bg-secondary mb-4 py-2 flex-row align-center\">\n            <div className=\"\">\n                <Link className=\"navbar-brand\" to=\"/\">\n                    Busted Brackets\n                </Link>\n                <nav className=\"navbar navbar-expand-lg navbar-light\">\n                    <div className=\"container\">\n                    <ul className=\"navbar-nav ml-auto\">\n                    {Auth.loggedIn() ? (\n                        <>  \n                            <li className=\"nav-item\">\n                            <Link  className=\"nav-link\" to=\"/profile\">Profile</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                    <Link className=\"nav-link\" to=\"/bracket\">Create a Bracket</Link>\n                                </li>\n                            <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"/\" onClick={logout}>\n\n                                Logout\n                            </a>\n                            </li>\n                        </>\n                                 ) : (\n                         <>     \n                                <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"/login\">Login</Link>\n                                </li>\n                                <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"/signup\">Signup</Link>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <Link className=\"nav-link\" to=\"/about\">About Us</Link>\n                                </li>\n                              \n                         </>\n                        )}\n                        </ul>\n                        </div>\n                </nav>\n            </div>\n        </header>\n    );\n};\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst Home = () => {\n    const myStyles = {\n        display: \"inline-block\",\n        martinTop:\"%18\",\n    }\n    return (\n        <main>\n            <div className=\"hero\"\n            style={{\n                textAlign:\"center\",\n            }}>\n                <h1 style={myStyles.title} className=\"heroTitle\">\n          <Link to=\"/about\">BUSTED BRACKETS</Link>\n        </h1>\n        <div className=\"button-hero\">\n          <Link to=\"/signup\">Join us and start creating your bracket</Link>\n        </div>\n        <div className=\"button-hero\">\n          <Link to=\"/login\">Login and see your brackets!</Link>\n        </div>\n        <div className=\"button-hero\">\n          <Link to=\"/about\">About Us</Link>\n        </div>\n            </div>\n        </main>\n    )\n}\n\nexport default Home;\n","import { Bracket, RoundProps } from \"react-brackets\";\n\nfunction About(props) {\n  const style = {\n    text: {\n      width: \"40%\",\n      margin: \"auto\",\n      fontSize: \"22px\",\n    },\n  };\n\n  const fakeDbStuff = [\n    { name: \"Bucks\" },\n    { name: \"Cavs\" },\n    { name: \"Bulls\" },\n    { name: \"Pacers\" },\n  ];\n\n  const roundsWithDBData: RoundProps[] = [\n    {\n      title: \"round One\",\n      seeds: [],\n    },\n  ];\n\n  for (let i = 0; i < fakeDbStuff.length; i += 2) {\n    const roundData = {\n      id: i,\n      date: new Date().toDateString(),\n      teams: [{ name: fakeDbStuff[i].name }, { name: fakeDbStuff[i + 1].name }],\n    };\n    roundsWithDBData[0].seeds.push(roundData);\n  }\n\n  console.log(\"ROunds with data!!\", roundsWithDBData);\n\n  const rounds: RoundProps[] = [\n    {\n      title: \"Round one\",\n      seeds: [\n        {\n          id: 1,\n          date: new Date().toDateString(),\n          teams: [{ name: \"Team A\" }, { name: \"Team B\" }],\n        },\n        {\n          id: 2,\n          date: new Date().toDateString(),\n          teams: [{ name: \"Team C\" }, { name: \"Team D\" }],\n        },\n      ],\n    },\n    {\n      title: \"Round one\",\n      seeds: [\n        {\n          id: 3,\n          date: new Date().toDateString(),\n          teams: [{ name: \"Team A\" }, { name: \"Team C\" }],\n        },\n      ],\n    },\n  ];\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <h2 className=\"pageHeader\">About Busted Brackets</h2>\n      <br></br>\n      <p style={style.text}>\n        Hello! Thank you for visiting Busted Brackets! This site is a user\n        friendly/interactive site for generating brackets, for whatever purpose\n        you may have! You can select from several differnet types of brackets,\n        and invite your friends to join/edit the brackets for your pre\n        determined purposes. Please go ahead and make sure you are logged in, or\n        have created a profile! Happy Bracket Busting!!\n      </p>\n      <br></br>\n      <p style={style.text}>\n        Please see the below brackets. Please consider these as a few different\n        Bracket examples that you can use/create when creating your brackets!!\n      </p>\n      <br></br>\n      <Bracket rounds={roundsWithDBData} />\n    </div>\n  );\n}\n\nexport default About;","import { useState } from \"react\";\n\nimport { Bracket } from \"react-brackets\";\n\nfunction Generator(props) {\n  const [numberOfTeams, setNumberOfTeams] = useState(0);\n\n  {\n    /*const style = {\n    text: {\n      width: \"40%\",\n      margin: \"auto\",\n      fontSize: \"22px\",\n    },\n  };\n  const fakeDbStuff = [\n    { name: \"Bucks\" },\n    { name: \"Cavs\" },\n    { name: \"Bulls\" },\n    { name: \"Pacers\" },\n  ];\n  const roundsWithDBData = [\n    {\n      title: \"round One\",\n      seeds: [],\n    },\n  ];\n  for (let i = 0; i < fakeDbStuff.length; i += 2) {\n    const roundData = {\n      id: i,\n      date: new Date().toDateString(),\n      teams: [{ name: fakeDbStuff[i].name }, { name: fakeDbStuff[i + 1].name }],\n    };\n    roundsWithDBData[0].seeds.push(roundData);\n  }\n  console.log(\"ROunds with data!!\", roundsWithDBData);\n  const rounds = [\n    {\n      title: \"Round one\",\n      seeds: [\n        {\n          id: 1,\n          date: new Date().toDateString(),\n          teams: [{ name: \"Team A\" }, { name: \"Team B\" }],\n        },\n        {\n          id: 2,\n          date: new Date().toDateString(),\n          teams: [{ name: \"Team C\" }, { name: \"Team D\" }],\n        },\n      ],\n    },\n    {\n      title: \"Round one\",\n      seeds: [\n        {\n          id: 3,\n          date: new Date().toDateString(),\n          teams: [{ name: \"Team A\" }, { name: \"Team C\" }],\n        },\n      ],\n    },\n  ];*/\n  }\n\n  let makeRounds = () => {\n    let numberOfRounds = Math.cbrt(numberOfTeams) + 1;\n\n    let rounds = [];\n\n    for (let i = 0; i < numberOfRounds; i++) {\n      let round = {\n        title: `Round ${i + 1}`,\n        seeds: [],\n      };\n\n      let numberOfTeamsInRound = numberOfTeams / Math.pow(2, i + 1);\n\n      for (let j = 0; j < numberOfTeamsInRound; j++) {\n        let seed = {\n          id: i * numberOfTeams + j,\n\n          teams: [{ name: \"\" }, { name: \"\" }],\n        };\n\n        round.seeds.push(seed);\n      }\n\n      rounds.push(round);\n    }\n\n    return rounds;\n  };\n\n  console.log(makeRounds());\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <h2 className=\"pageHeader\">Bracket Generator Page</h2>\n      <select\n        onChange={(e) => {\n          if (!isNaN(e.target.value)) {\n            setNumberOfTeams(parseInt(e.target.value));\n          } else {\n            console.log(\"Not a number!\");\n          }\n        }}\n      >\n        <option>Please select the number of teams</option>\n        <option>2</option>\n        <option>4</option>\n        <option>8</option>\n        <option>16</option>\n        <option>32</option>\n        <option>64</option>\n      </select>\n      <Bracket rounds={makeRounds()} />\n    </div>\n  );\n}\n\nexport default Generator;","import { gql } from '@apollo/client';\n\n// login mutations\nexport const LOGIN_USER = gql`\nmutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`\n// creating user\nexport const CREATE_USER = gql`\n  mutation createUser($username: String!, $email: String!, $password: String!) {\n    createUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;","import React,{ useState } from 'react';\n\nimport { useMutation } from '@apollo/react-hooks';\nimport { LOGIN_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Login = props => {\n    const [formState,setFormState] = useState({email:'',password:''});\n    const [login, { error }] = useMutation(LOGIN_USER);\n\n    const handleChange = event => {\n        const { name , value } = event.target;\n\n        setFormState({\n            ...formState,\n            [name]: value\n        });\n    };\n\n    const handleFormSubmit = async event => {\n        event.preventDefault();\n\n        try {\n            const { data } = await login({\n                variables:{...formState}\n            });\n            Auth.login(data.login.token);\n        } catch (e) {\n            console.error(e);\n        }\n\n        setFormState({\n            email:'',\n            password:''\n        });\n    };\n\n    return(\n        <main className=\"flex-row justify-center mb-4\">\n            <div className=\"col-12 col-md-6\">\n                <div className=\"card\">\n                    <h4 className=\"card-header\">Login</h4>\n                    <div className=\"card-body\">\n                        <form  className=\"form-group\" onSubmit={handleFormSubmit}>\n                            <input\n                            className=\"form-control\"\n                            placeholder=\"Your email\"\n                            name=\"email\"\n                            type=\"email\"\n                            id=\"email\"\n                            value={formState.email}\n                            onChange={handleChange}\n                            />\n                            <input\n                            className=\"form-control\"\n                            placeholder=\"*****\"\n                            name=\"password\"\n                            type=\"password\"\n                            id=\"password\"\n                            value={formState.password}\n                            onChange={handleChange}\n                            />\n                            <button className=\"btn btn-dark btn-lg btn-block\" type=\"submit\">\n                                Submit\n                            </button>\n                        </form>\n                        {error && <div>Login failed</div>}\n                    </div>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default Login;","import { gql } from '@apollo/client';\n\n\n// to get the user variables\nexport const QUERY_USER = gql`\nquery user($username:String!){\n    user(username:$username){\n        _id\n        username\n        email\n    }\n}\n\n`;\n\n\nexport const QUERY_ME = gql`\n{\n    me{\n        _id\n        username\n        email\n    }\n}`;","import React from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_USER, QUERY_ME } from '../utils/queries';\nimport Auth from '../utils/auth';\nconst Profile = props => {\n    const { username: userParam } = useParams();\n\n    const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_ME, {\n        variables: { username: userParam }\n    });\n\n    const user = data?.me || data?.users || {};\n    if (\n        Auth.loggedIn() &&\n        Auth.getProfile().data.username === userParam\n    ) {\n        return <Redirect to=\"/profile\" />;\n    }\n\n    if (loading) {\n        return <div>Loading...</div>\n    }\n    if(!Auth.loggedIn()){\n        return (\n            <h4>\n                You need to be logged in\n            </h4>\n        )\n    }\n \n\n    return (\n        <div>\n            <div className=\"flex-row mb-3\">\n                <h2 className=\"bg-dark text-secondary p-3 display-inline-block\">\n                    This is { Auth.getProfile().data.username ? `${ Auth.getProfile().data.username}'s` : 'Your'} Profile\n                </h2>\n                <h2>\n                    Username: {`${ Auth.getProfile().data.username}`}\n                </h2>\n                <h2>\n                    Email: {`${Auth.getProfile().data.email}`}\n                </h2>\n                    <button className=\"btn ml-auto\">\n                        Invite people\n                    </button>\n\n            </div>\n        </div>\n    )\n}\nexport default Profile;","import React,{ useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { CREATE_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n    const [formState,setFormState] = useState({username:'',email:'',password:''});\n    const [createUser,{error}] = useMutation(CREATE_USER);\n\n    const handleChange = event => {\n        const { name,value } = event.target;\n\n        setFormState({\n            ...formState,\n            [name]:value\n        });\n    };\n\n    const handleFormSubmit = async event => {\n        event.preventDefault();\n        try {\n            const { data } = await createUser({\n                variables:{ ...formState}\n            });\n            Auth.login(data.createUser.token);\n        } catch (e) {\n            console.error(e);\n        }\n    };\n\n    return (\n        <main className=\"flex-row justify-center mb-4\">\n            <div className=\"col-12 col-md-6\">\n                <div className=\"card\">\n                    <h4 className=\"card-header\">Sign Up</h4>\n                    <form  className=\"form-group\" onSubmit={handleFormSubmit}>\n                        <input\n                        className=\"form-control\"\n                        placeholder=\"Your username\"\n                        name=\"username\"\n                        type=\"username\"\n                        id=\"username\"\n                        value={formState.username}\n                        onChange={handleChange}\n                        />\n                        <input\n                          className=\"form-control\"\n                          placeholder=\"Your email\"\n                          name=\"email\"\n                          type=\"email\"\n                          id=\"email\"\n                          value={formState.email}\n                          onChange={handleChange}\n                          />  \n                        <input\n                        className=\"form-control\"\n                        placeholder=\"Your password\"\n                        name=\"password\"\n                        type=\"password\"\n                        id=\"password\"\n                        value={formState.password}\n                        onChange={handleChange}\n                        />\n                        <button className=\"btn btn-dark btn-lg btn-block\" type=\"submit\">\n                            Submit\n                            </button> \n\n                    </form>\n                    {error && <div>Signup Failed</div>}\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default Signup;","import React from 'react';\nimport { BrowserRouter as Router,Route,Switch} from 'react-router-dom';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-boost';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\n\nimport Footer from './components/Footer';\nimport Header from './components/Header';\n\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Bracket from './pages/Bracket';\nimport Login from './pages/Login';\nimport Profile from './pages/Profile';\nimport Signup from './pages/Signup'\n\nconst client = new ApolloClient({\n  request:operation => {\n    const token = localStorage.getItem('_id_token');\n    operation.setContext({\n      headers:{\n        authorization:token ? `Bearer ${token}` : ''\n      }\n    });\n  },\n  uri:'/graphql'\n})\n\n\nfunction App() {\n  return (\n  <ApolloProvider client={client}>\n    <Router>\n    <div>\n      <Header/>\n      <div className=\"container\">\n      <div className=\"outer\">\n        <div className=\"inner\">\n        <Switch>\n       <Route exact path=\"/\" component={Home} />\n       <Route exact path=\"/about\" component={About}/>\n       <Route exact path=\"/login\" component={Login}/>\n       <Route exact path=\"/signup\" component={Signup}/>\n       <Route exact path=\"/bracket\" component={Bracket}/>\n       <Route exact path=\"/profile/:username?\" component={Profile}/>\n        </Switch>\n        </div>\n        </div>\n      </div>\n      <Footer/>\n    </div>\n    </Router>\n  </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}